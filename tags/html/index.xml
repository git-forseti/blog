<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on Blog da Forseti</title>
    <link>https://git-forseti.github.io/blog/tags/html/index.xml</link>
    <description>Recent content in Html on Blog da Forseti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://git-forseti.github.io/blog/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Iniciando com Hugo</title>
      <link>https://git-forseti.github.io/blog/post/iniciando-com-hugo/</link>
      <pubDate>Wed, 29 Mar 2017 13:18:56 -0300</pubDate>
      
      <guid>https://git-forseti.github.io/blog/post/iniciando-com-hugo/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; é um gerador de html estatico, desenvolvido na linguagem de programação Go (Golang) o conteudo é escrito em Markdown se mostrando rapido na geração de html.O intuito deste post é fazer o basico com essa ótima ferramenta, criar um projeto novo e fazer um post, então vamos iniciar.&lt;/p&gt;

&lt;h3 id=&#34;instalação&#34;&gt;Instalação&lt;/h3&gt;

&lt;p&gt;Para instalar Hugo é necessario apenas seguir os procedimentos demonstrados na documentação &lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;https://gohugo.io/overview/installing/&lt;/a&gt;
no meu caso que estou usando Ubuntu irei usar o pacote deb hugo_0.19-64bit.deb que foi obtido atraves do projeto no &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget &amp;quot;https://github.com/spf13/hugo/releases/download/v0.19/hugo_0.19-64bit.deb&amp;quot; &amp;amp;&amp;amp; sudo dpkg -i hugo_0.19-64bit.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Executando &amp;lsquo;hugo version&amp;rsquo; deverá aparecer a versão do Hugo, estou utilizando a 0.19.&lt;/p&gt;

&lt;p&gt;Para criar um diretorio onde sera seu espaço de trabalho execute: &lt;code&gt;hugo new site nome_do_meu_blog&lt;/code&gt; e sera criada uma pasta nome_do_meu_blog com uma hierarquia de diretorios. Executando &lt;code&gt;hugo --help&lt;/code&gt; é possivel ver outras opções e parametros do hugo.
&lt;code&gt;hugo new post/iniciando-com-hugo.md&lt;/code&gt; ira criar uma pasta &lt;code&gt;post&lt;/code&gt; dentro de &lt;code&gt;content&lt;/code&gt; com um arquivo chamado &lt;code&gt;inciando-com-hugo.md&lt;/code&gt;. Este arquivo é onde deve ser feito a edição, para publicação de conteudo.&lt;/p&gt;

&lt;p&gt;Um exemplo simples de conteudo em draft (esboço)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;+++
date = &amp;quot;2017-03-29T13:18:56-03:00&amp;quot;
title = &amp;quot;Iniciando com Hugo&amp;quot;
Description = &amp;quot;Iniciando com o gerador de HTML Hugo&amp;quot;
draft = true
+++

[Hugo](https://gohugo.io/) é um gerador de html estatico...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O conteúdo que esta dentro de +++ se chama &lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;front matter&lt;/a&gt; são meta dados dentro de um post que é usado pelo tema.&lt;/p&gt;

&lt;h3 id=&#34;edição-e-visualização&#34;&gt;Edição e visualização&lt;/h3&gt;

&lt;p&gt;Hugo contem um servidor web embutido com live reload &lt;code&gt;hugo server --baseURL &amp;quot;http://192.168.56.12/&amp;quot; --buildDrafts --bind 192.168.56.111&lt;/code&gt;
baseUrl e bind é preciso pois executo dentro de uma maquina virtual, sabendo que o padrão é sempre listar localmente, buildDrafts é para exibir o conteudo em esboço.&lt;/p&gt;

&lt;h3 id=&#34;config-toml&#34;&gt;config.toml&lt;/h3&gt;

&lt;p&gt;config.toml é o arquivo de configuração, tem alguns paramentro padrão para o hugo como também para o tema que esta sendo utilizando, segue o meu config.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Subtitle = &amp;quot;Blog Forseti Tecnologia&amp;quot;
description = &amp;quot;Compartilhando problemas enfrentados pela equipe da Forseti&amp;quot;
baseURL  = &amp;quot;https://git-forseti.github.io/&amp;quot;
theme = &amp;quot;bleak&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
buildDrafts = false
publishdir = &amp;quot;public&amp;quot;
author = &amp;quot;Forseti Tecnologia e Comunicação&amp;quot;
canonifyURLs = false


[params]
dateform = &amp;quot;2 Jan, 2006&amp;quot;
dateformfull = &amp;quot;2 Mon Jan 2006 15:04:05 MST&amp;quot;
description = &amp;quot;Passando o conhecimento para a internet&amp;quot;
logofile = &amp;quot;&amp;quot;
faviconfile = &amp;quot;&amp;quot;
highlightjs = true
progressively = true
lang = &amp;quot;pt-br&amp;quot;
github = &amp;quot;https://github.com/git-forseti/&amp;quot;
email = &amp;quot;forseti@forseti.com.br&amp;quot;
linkedin = &amp;quot;&amp;quot;
twitter = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Todas as configurações são encontradas na &lt;a href=&#34;https://gohugo.io/overview/introduction/&#34;&gt;documentação&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;temas&#34;&gt;Temas&lt;/h3&gt;

&lt;p&gt;Os temas são faceis de instalar, existe varios temas montados e bem legais, apenas clonar &lt;code&gt;git clone https://github.com/Zenithar/hugo-theme-bleak.git&lt;/code&gt; dentro da pasta themes. No atual momento estou utilizando &lt;code&gt;http://themes.gohugo.io/bleak/&lt;/code&gt;, é possivel ter mais de um dentro da pasta, voce tambem pode configurar o padrao dentro de config.toml&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;gerando-html&#34;&gt;Gerando HTML&lt;/h3&gt;

&lt;p&gt;Chamando apenas &lt;code&gt;hugo&lt;/code&gt; ele gera os arquivos estaticos dentro da pasta public (porque eu configurei no config.toml), com esses arquivos eu posso enviar para qualquer servidor web e visualiza-los.&lt;/p&gt;

&lt;h3 id=&#34;extra&#34;&gt;Extra&lt;/h3&gt;

&lt;p&gt;Para utiliza o &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt; para arquivos estaticos, utilizo um comando simples para enviar, coloco a pasta no gitignore &lt;code&gt;echo &amp;quot;public/&amp;quot; &amp;gt;&amp;gt; .gitignore&amp;quot;&lt;/code&gt; e &lt;code&gt;git worktree add -B gh-pages public/ origin/gh-pages&lt;/code&gt; (a partir da versão 2.5 do Git), com esse comando a pasta public é uma branch diferente, gere os arquivos estaticos, entre no public/, &amp;lsquo;comita&amp;rsquo; e envie. Ao acessar &lt;a href=&#34;https://seu_usuario.github.io/repositorio&#34;&gt;https://seu_usuario.github.io/repositorio&lt;/a&gt; o conteudo estará disponível. O legal que o custo é zero em servidor ou hospedagem e a publicação mais simples ainda, sendo possivel automatizar o mesmo.&lt;/p&gt;

&lt;p&gt;Até a próxima.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Jhonata Menezes &lt;a href=&#34;https://github.com/jhonata-menezes&#34;&gt;Github&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/jhonata-santos-a3659011a/&#34;&gt;Linkedin&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>